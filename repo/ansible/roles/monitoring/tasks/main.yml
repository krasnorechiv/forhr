---
# Делаем структуру директорий для мониторинга
- name: Create dir's for monitoring containers
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  become: true
  loop:
    - /opt/monitoring/prometheus
    - /opt/monitoring/grafana/provisioning/dashboards
    - /opt/monitoring/grafana/provisioning/datasources

# Копируем преднастроенные конфиги

- name: Copy configs
  copy:
    src: "files/prometheus/prometheus.yml"
    dest: "/opt/monitoring/prometheus/prometheus.yml"
  become: true

- name: Copy Grafana provisioning
  copy:
    src: "files/grafana/provisioning/{{ item.dir }}/{{ item.file }}"
    dest: "/opt/monitoring/grafana/provisioning/{{ item.dir }}/{{ item.file }}"
  loop:
    - { dir: "dashboards", file: "node.json" }
    - { dir: "datasources", file: "prometheus.yml" }
  become: true

# Деполим ноде экспортер

- name: Deploy Node Exporter
  community.docker.docker_container:
    name: node_exporter
    image: "prom/node-exporter:{{ node_exporter_version }}"
    restart_policy: unless-stopped
    networks: 
      - pelmennaya-net
    ports:
      - "{{ node_exporter_port }}:9100"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command: >
      "--path.procfs=/host/proc",
      "--path.sysfs=/host/sys",
      "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)"

# Деплоим прометея

- name: Deploy Prometheus
  community.docker.docker_container:
    name: prometheus
    image: "prom/prometheus:{{ prometheus_version }}"
    restart_policy: unless-stopped
    networks: 
      - pelmennaya-net
    ports:
      - "{{ prometheus_port }}:9090"
    volumes:
      - "/opt/monitoring/prometheus:/etc/prometheus"
      - "prometheus_data:/prometheus"
    command: >
      "--config.file=/etc/prometheus/prometheus.yml",
      "--storage.tsdb.path=/prometheus"

# Деплоим графану
- name: Deploy Grafana
  community.docker.docker_container:
    name: grafana
    image: "grafana/grafana:{{ grafana_version }}"
    restart_policy: unless-stopped
    networks: 
      - pelmennaya-net
    ports:
      - "{{ grafana_port }}:3000"
    volumes:
      - "/opt/monitoring/grafana/provisioning:/etc/grafana/provisioning"
      - "grafana_data:/var/lib/grafana"
    env:
      GF_SECURITY_ADMIN_USER: "{{ grafana_admin_user }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
      GF_USERS_DEFAULT_THEME: "light"